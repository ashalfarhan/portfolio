name: CI

on:
  push:
    paths-ignore:
      - '**.md'
env:
  CI: true
  PLAYWRIGHT_BROWSERS_PATH: 0
  CACHE_VERSION: v1
  NODE_VERSION: 16.13

jobs:
  build:
    name: Static code analyzer, Test, and Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get global cache dir 🫙
        id: yarn-global-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache 🔍
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ${{ steps.yarn-global-cache.outputs.dir }}
            node_modules
          key: yarn-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: Install dependencies ⬇️
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile

      - name: Code analysis ⌨️
        run: |
          yarn fmt:check
          yarn lint

      - name: Test 🧪
        run: yarn test

      - name: Build 👷‍♀️
        run: yarn build

  # e2e-test:
  #   name: E2E Testing with Playwright
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Wait Vercel Deployment ⌚️
  #       uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
  #       id: vercel-deploy
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         max_timeout: 600

  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.13

  #     - name: Restore cache 🔍
  #       uses: actions/cache@v2
  #       id: cache-deps
  #       with:
  #         path: |
  #           node_modules
  #         key: yarn-v1-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           yarn-v1-${{ runner.os }}-

  #     - name: Install dependencies, and browsers ⬇️
  #       if: steps.cache-deps.outputs.cache-hit != 'true'
  #       run: |
  #         yarn install --frozen-lockfile
  #         npx playwright install
  #         npx playwright install-deps

  #     - name: E2E Tests 💻
  #       run: yarn test:e2e
  #       env:
  #         BASE_URL: ${{ steps.vercel-deploy.outputs.url }}
